{"version":3,"file":"spectrum-customizer.js","sourceRoot":"","sources":["../../src/spectrum-customizer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,yCAAyC,CAAC;AAG/D,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;AAE9B,uBAAuB;AACvB,MAAM,MAAM,GAAa;IACrB,KAAK,EAAE,GAAG;IACV,MAAM,EAAE,GAAG;IACX,UAAU,EAAE,cAAc;IAC1B,IAAI,EAAE,EAAE;IACR,QAAQ,EAAE,IAAI;IACd,QAAQ,EAAE,IAAI;IACd,WAAW,EAAE,gBAAgB;IAC7B,UAAU,EAAE,gBAAgB;IAC5B,eAAe,EAAE,gBAAgB;IACjC,cAAc,EAAE,gBAAgB;CACnC,CAAC;AAEF,4BAA4B;AAC5B,MAAM,UAAU;IAIZ,YAAY,SAAsB;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;QACzD,wEAAwE;QACxE,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;QACpE,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;QACjE,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QAC1D,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QAC3D,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QAC1D,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,iBAAiB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/D,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,gBAAgB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,EAAE,CAAC,QAAoB;QACnB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACrC,CAAC;CACJ","sourcesContent":["import { Pane } from \"https://cdn.skypack.dev/tweakpane@3.1.0\";\nimport { UIParams } from \"./spectrum.js\";\n\nexport { Customizer, params };\n\n// Tweakpane parameters\nconst params: UIParams = {\n    width: 900,\n    height: 100,\n    background: 'rgb(0, 0, 0)',\n    fmBW: 16,\n    vnbDigBW: 12.5, // DMR\n    unbDigBW: 6.25, // DStar\n    outputColor: 'rgb(0, 0, 255)',\n    inputColor: 'rgb(255, 0, 0)',\n    outputBandColor: 'rgb(0, 0, 128)',\n    inputBandColor: 'rgb(128, 0, 0)',\n};\n\n// Singleton as implemented!\nclass Customizer {\n    pane: Pane;\n    params: UIParams;\n\n    constructor(container: HTMLElement) {\n        this.pane = new Pane({ container });\n        this.params = params;\n\n        const fParams = this.pane.addFolder({ title: 'Params' });\n        // fParams.addInput(params, 'width', { min: 200, max: 1200, step: 10 });\n        fParams.addInput(params, 'height', { min: 30, max: 400, step: 10 });\n        fParams.addInput(params, 'fmBW', { min: 1, max: 20, step: 0.5 });\n        fParams.addInput(params, 'background', { view: 'color' });\n        fParams.addInput(params, 'outputColor', { view: 'color' });\n        fParams.addInput(params, 'inputColor', { view: 'color' });\n        fParams.addInput(params, 'outputBandColor', { view: 'color' });\n        fParams.addInput(params, 'inputBandColor', { view: 'color' });\n    }\n\n    on(callback: () => void) {\n        this.pane.on('change', callback);\n    }\n}\n"]}