{"version":3,"file":"spectrum.js","sourceRoot":"","sources":["../../src/spectrum.ts"],"names":[],"mappings":"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","sourcesContent":["export { Spectrum };\n\nclass Spectrum {\n    constructor() {\n        console.log(\"Spectrum\");\n    }\n}\n\n\nimport {Pane} from \"https://cdn.skypack.dev/tweakpane@3.1.0\";\n\nconst REPEATERS = \"https://raw.githubusercontent.com/QCaudron/repeater_roundabout/main/assets/repeaters.json\";\n\n// Tweakpane parameters\nconst params = {\n  width: 800,\n  height: 70,\n  background: 'rgb(0, 0, 0)',\n  fmBW: 16,\n  vnbDigBW: 12.5, // DMR\n  unbDigBW: 6.25, // DStar\n  outputColor: 'rgb(0, 0, 255)',\n  inputColor: 'rgb(255, 0, 0)',\n  outputBandColor: 'rgb(0, 0, 128)',\n  inputBandColor: 'rgb(128, 0, 0)',\n};\n\nlet canvas: HTMLCanvasElement;\nlet freq: HTMLElement;\nlet chz: HTMLElement;\nlet repeaters: Repeater[];\n\nconst bandMin = 144.0;\nconst bandMax = 148.0;\n\ninterface Zone {\n  name: string;\n  type: string;\n  min: number,\n  max: number\n}\n\nconst typeColor: Map<string, string> = new Map();\n\ninterface Repeater {\n  callsign: string,\n  input: number,\n  output: number\n}\n\ninterface RoundaboutRep {\n    \"Group Name\": string,\n    Callsign: string,\n    Location: string,\n    Mode: string,\n    \"Output (MHz)\": string,\n    \"Offset (MHz)\": string,\n    \"Tone (Hz)\": string,\n    Coordinates: [number, number],\n    \"Long Name\": string,\n    Website: string,\n}\n\nconst twoMeterZones: Zone[] = [\n  // {name: 'CW', min: 144.0, max: 144.1, color: 'gray'},\n  // {name: 'SSB', min: 144.1, max: 144.275, color: 'darkorange'},\n  {name: 'FM Inputs', min: 144.5, max: 144.9, type: 'fmInputBand'},\n  {name: 'FM Outputs', min: 145.1, max: 145.49, type: 'fmOutputBand'},\n  {name: 'FM Inputs', min: 146.01, max: 146.4, type: 'fmInputBand'},\n  {name: 'FM Outputs', min: 146.62, max: 147.38, type: 'fmOutputBand'},\n  {name: 'FM Inputs', min: 147.61, max: 147.99, type: 'fmInputBand'},\n  {name: 'VNBD Inputs', min: 147.40625, max: 147.50625, type: 'fmInputBand'},\n  {name: 'VNBD Outputs', min: 146.40625, max: 146.50625, type: 'fmOutputBand'},\n];\n\nfunction createPane(container: HTMLElement) {\n  const pane = new Pane({container});\n  // pane.registerPlugin(EssentialsPlugin);\n\n  const fParams = pane.addFolder({title: 'Params'});\n  fParams.addInput(params, 'width', {min: 200, max: 1200, step: 10});\n  fParams.addInput(params, 'height', {min: 30, max: 400, step: 10});\n  fParams.addInput(params, 'fmBW', {min: 1, max: 20, step: 0.5});\n  fParams.addInput(params, 'background', {view: 'color'});\n  fParams.addInput(params, 'outputColor', {view: 'color'});\n  fParams.addInput(params, 'inputColor', {view: 'color'});\n  fParams.addInput(params, 'outputBandColor', {view: 'color'});\n  fParams.addInput(params, 'inputBandColor', {view: 'color'});\n  \n  pane.on('change', (ev) => {\n    refresh();\n  });\n}\n\nasync function main() {\n  canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n  freq = document.getElementById(\"freq\")!\n  chz = document.getElementById(\"chz\")!;\n  \n  createPane(document.body);\n  \n  canvas.addEventListener('mousemove', (e) => {\n    let [r, f] = repeaterFromFreq(freqFromX(e.offsetX));\n    let displayed = f.toFixed(4);\n    freq.innerText = displayed.slice(0, -1);\n    chz.innerText = displayed.slice(-1);\n    if (r !== null) {\n      console.log(r);\n    }\n  });\n  \n  console.log(\"Fetching data...\");\n  let response = await fetch(REPEATERS);\n  let repeatersRaw = await response.json();\n  console.log(\"Parsing data...\");\n  repeaters = repeatersRaw.map((r: RoundaboutRep) => {\n    let callsign = r['Callsign'];\n    let output = parseFloat(r['Output (MHz)']);\n    let offset = parseFloat(r['Offset (MHz)']);\n    let input = parseFloat((output + offset).toFixed(4));\n    return {callsign, input, output};\n  });\n  \n  refresh();\n}\n\nfunction refresh() {\n  canvas.height = params.height;\n  canvas.width = params.width;\n  for (let elt of document.querySelectorAll('.display') as NodeListOf<HTMLElement>) {\n    elt.style.width = `${params.width}px`;\n  }\n  \n  // Track changes to color pallette\n  typeColor.set('fmInputBand', params.inputBandColor);\n  typeColor.set('fmOutputBand', params.outputBandColor);\n  typeColor.set('fmInput', params.inputColor);\n  typeColor.set('fmOutput', params.outputColor);\n  \n  const ctx = canvas.getContext('2d')!;\n  ctx.fillStyle = params.background;\n  ctx.fillRect(0, 0, params.width, params.height);\n  \n  for (let zone of twoMeterZones) {\n    drawZone(ctx, zone);\n  }\n  \n  for (let repeater of repeaters) {\n    if (repeater.output < 144 || repeater.output > 148) {\n      continue;\n    }\n    // console.log(`${repeater.callsign}: ${repeater.output} ${repeater.input}`);\n    drawZone(ctx, {\n      name: repeater.callsign,\n      min: repeater.output - params.fmBW/2/1000,\n      max: repeater.output + params.fmBW/2/1000,\n      type: 'fmOutput'\n    });\n    drawZone(ctx, {\n      name: repeater.callsign,\n      min: repeater.input - params.fmBW/2/1000,\n      max: repeater.input + params.fmBW/2/1000,\n      type: 'fmInput'\n    });\n  }\n}\n\nfunction drawZone(ctx: CanvasRenderingContext2D, zone: Zone) {\n  const xMin = scaleX(zone.min);\n  const xMax = scaleX(zone.max);\n  // console.log(`${zone.name}: ${xMin}-${xMax}`);\n  ctx.fillStyle = typeColor.get(zone.type)!;\n  ctx.fillRect(xMin, 0, xMax - xMin, params.height);\n}\n  \nfunction scaleX(f: number): number {\n  return params.width * (f - bandMin) / (bandMax - bandMin);\n}\n\nfunction freqFromX(x: number): number {\n  let f = bandMin + (x / params.width) * (bandMax - bandMin);\n  return f;\n}\n\nfunction repeaterFromFreq(f: number): [Repeater | null, number] {\n  let best: Repeater | null = null;\n  let distBest: number = 1000;\n  let bestF: number = 144.0;\n  \n  for (let repeater of repeaters) {\n    for (let fT of [repeater.input, repeater.output]) {\n      if (!best || Math.abs(f - fT) < distBest) {\n        best = repeater;\n        distBest = Math.abs(f - fT);\n        bestF = fT;\n        continue;\n      }\n    }\n  }\n  \n  if (distBest > params.fmBW/1000) {\n    return [null, f];\n  }\n  \n  return [best, bestF];\n}\n\nmain();\n"]}